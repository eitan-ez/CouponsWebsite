{"version":3,"sources":["reportWebVitals.ts","Components/LayoutArea/Footer/Footer.tsx","Redux/AuthState.ts","Redux/Store.ts","Components/LayoutArea/AuthArea/AuthMenu/AuthMenu.tsx","Components/LayoutArea/Header/Header.tsx","Services/Globals.ts","Services/JwtAxios.ts","Services/Notification.ts","Components/SharedArea/CreateMuiTheme/CreateMuiTheme.ts","Components/AdminArea/AddCompany/AddCompany.tsx","Components/AdminArea/AddCustomer/AddCustomer.tsx","Components/AdminArea/DeleteCompany/DeleteCompany.tsx","Components/AdminArea/DeleteCustomer/DeleteCustomer.tsx","Components/AdminArea/GetAllCustomers/GetAllCustomers.tsx","Components/AdminArea/getOneCompany/getOneCompany.tsx","Components/AdminArea/getOneCustomer/getOneCustomer.tsx","Components/AdminArea/UpdateCompany/UpdateCompany.tsx","Components/AdminArea/UpdateCustomer/UpdateCustomer.tsx","Models/UserModel.ts","Components/AdminArea/GetAllCompanies/GetAllCompanies.tsx","Components/AdminArea/MethodCard/MethodCard.tsx","Components/AdminArea/AdminMenu/AdminMenu.tsx","Components/LayoutArea/AuthArea/SignForm/SignForm.tsx","Components/LayoutArea/Home/Main.tsx","Components/CompanyArea/AddCoupon/AddCoupon.tsx","Components/CompanyArea/DeleteCoupon/DeleteCoupon.tsx","Components/CompanyArea/UpdateCoupon/UpdateCoupon.tsx","Components/SharedArea/CouponCard/CouponCard.tsx","Components/CompanyArea/GetCompanyCoupons/GetCompanyCoupons.tsx","Components/CompanyArea/GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice.tsx","Components/CompanyArea/GetCompanyCouponsByCategory/GetCompanyCouponsByCategory.tsx","Components/CompanyArea/GetCompanyDetails/GetCompanyDetails.tsx","Components/CompanyArea/CompanyMenu/CompanyMenu.tsx","Components/CustomerArea/GetCustomerCoupons/GetCustomerCoupons.tsx","Components/CustomerArea/GetCustomerCouponsByCategory/GetCustomerCouponsByCategory.tsx","Components/CustomerArea/GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice.tsx","Components/CustomerArea/GetCustomerDetails/GetCustomerDetails.tsx","Components/CustomerArea/PurchaseCoupon/PurchaseCoupon.tsx","Components/CustomerArea/CustomerMenu/CustomerMenu.tsx","Components/LayoutArea/AuthArea/Logout/Logout.ts","Components/SharedArea/Page404/Page404.tsx","Components/AboutMeArea/AboutMe/AboutMe.tsx","Components/LayoutArea/Routing/Routing.tsx","Components/LayoutArea/Layout/Layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","AuthActionType","className","AuthState","user","storedUser","JSON","parse","localStorage","getItem","this","loginAction","type","Login","payload","rootReducers","combineReducers","authState","currentState","action","newState","Register","setItem","stringify","Logout","removeItem","store","createStore","AuthMenu","props","state","getState","subscribe","setState","email","to","Component","Header","Globals","globals","urls","adminLogin","adminAdd","adminUpdate","adminDelete","adminGet","company","companyGet","companyLogin","customerLogin","customerPurchase","customer","jwtAxios","axios","create","interceptors","request","use","headers","token","notify","notification","Notyf","duration","position","x","y","message","success","err","extractMessage","error","response","data","Array","isArray","darkTheme","createMuiTheme","palette","primary","main","green","secondary","red","AddCompany","useForm","register","handleSubmit","errors","formState","a","post","onSubmit","ThemeProvider","theme","Typography","align","variant","TextField","minLength","value","label","required","fullWidth","name","pattern","password","ButtonGroup","Button","color","AddCustomer","firstName","lastName","DeleteCompany","delete","id","min","DeleteCustomer","GetAllCustomers","customers","get","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableCell","TableBody","map","TableRow","GetOneCompany","useState","setCompany","sendCompany","companySent","onClick","GetOneCustomer","setCustomer","sendCustomer","customerSent","UpdateCompany","put","addedCompany","UpdateCustomer","UserType","addedCustomer","CompaniesTable","companies","MethodCard","ShowInnerComponent","children","sign","description","AdminMenu","userType","ADMIN","history","push","GetAllCompanies","getAllCustomers","getOneCustomer","SignForm","useHistory","credentials","dispatch","COMPANY","CUSTOMER","InputLabel","Select","MenuItem","Main","AddCoupon","coupon","title","amount","price","InputLabelProps","shrink","endDate","DeleteCoupon","UpdateCoupon","CouponCard","coupons","hover","role","category","GetCompanyCoupons","GetCompanyCouponsByMaxPrice","setCoupons","couponsReplacement","setCouponsReplacement","maxPrice","length","GetCompanyCouponsByCategory","onChange","selectItem","target","GetCompanyDetails","CompanyMenu","methodToShow","String","GetCustomerCoupons","GetCustomerCouponsByCategory","GetCustomerCouponsByMaxPrice","GetCustomerDetails","PurchaseCoupon","couponId","CustomerMenu","useEffect","Page404","src","alt","AboutMe","href","Routing","path","component","exact","from","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.771a8e9b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./Footer.css\";\n\nfunction Footer(): JSX.Element {\n    return (\n        <div className=\"Footer\">\n\t\t\t&#169; Eitan Etzion. May 2021\n        </div>\n    );\n}\n\nexport default Footer;\n","import { UserModel } from \"../Models/UserModel\";\r\n\r\nexport class AuthState {\r\n    public user: UserModel = null;\r\n    public constructor() {\r\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (storedUser) {\r\n            this.user = storedUser;\r\n        }\r\n    }\r\n}\r\n\r\nexport enum AuthActionType {\r\n    Register = \"Register\",\r\n    Login = \"Login\",\r\n    Logout = \"Logout\"\r\n}\r\n\r\nexport interface AuthAction {\r\n    type: AuthActionType;\r\n    payload?: any;\r\n}\r\n\r\nexport function registerAction(user: UserModel): AuthAction {\r\n    return { type: AuthActionType.Register, payload: user} ;\r\n}\r\nexport function loginAction(user: UserModel): AuthAction {\r\n    return { type: AuthActionType.Login, payload: user} ;\r\n}\r\nexport function logoutAction(): AuthAction {\r\n    return { type: AuthActionType.Logout} ;\r\n}\r\n\r\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction): AuthState {\r\n\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type){\r\n        case AuthActionType.Register:\r\n        case AuthActionType.Login:\r\n            newState.user = action.payload;\r\n            localStorage.setItem(\"user\", JSON.stringify(newState.user));\r\n            break;\r\n        case AuthActionType.Logout:\r\n            newState.user = null;\r\n            localStorage.removeItem(\"user\");\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\n\r\n","import { authReducer } from './AuthState';\r\nimport { combineReducers, createStore } from \"redux\";\r\n\r\nconst rootReducers = combineReducers({authState: authReducer});\r\nconst store = createStore(rootReducers);\r\n\r\nexport default store;","import { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { UserModel } from \"../../../../Models/UserModel\";\nimport store from \"../../../../Redux/Store\";\nimport \"./AuthMenu.css\";\n\ninterface AuthMenuState {\n\tuser: UserModel\n}\n\nclass AuthMenu extends Component<{}, AuthMenuState> {\n\n    public constructor(props: {}) {\n        super(props);\n        this.state = {\n            user: store.getState().authState.user \n        }\n    \n    }\n        public componentDidMount(): void {\n    \n    \n            store.subscribe(() => {\n                this.setState({ user: store.getState().authState.user });\n            });\n        }\n    \n        public render(): JSX.Element {\n            return (\n                <div className=\"AuthMenu\">\n                    {\n                        this.state.user && <>\n                            <span>Welcome {this.state.user.email}!</span>\n                            <span> | </span>\n                            <NavLink to=\"/logout\">Logout</NavLink>\n                        </>\n                    }\n            </div>\n        );\n    }\n}\n\nexport default AuthMenu;\n","import AuthMenu from \"../AuthArea/AuthMenu/AuthMenu\";\nimport \"./Header.css\";\n\nfunction Header(): JSX.Element {\n    return (\n        <div className=\"Header\">\n            <AuthMenu />\n\t\t\t<h1>\n                My Coupons Project\n            </h1>\n        </div>\n    );\n}\n\nexport default Header;\n","// Global settings which are the same for development and production: \r\nclass Globals {\r\n}\r\n\r\n// Global settings which are suitable only for development:\r\nclass DevelopmentGlobals extends Globals {\r\n    public urls = {\r\n        adminLogin: \"http://localhost:8080/api/admin/login\",\r\n        adminAdd: \"http://localhost:8080/api/admin/add-\",\r\n        adminUpdate: \"http://localhost:8080/api/admin/update-\",\r\n        adminDelete: \"http://localhost:8080/api/admin/delete-\",\r\n        adminGet: \"http://localhost:8080/api/admin/get-\",\r\n        \r\n        company: \"http://localhost:8080/api/company/\",\r\n        companyGet: \"http://localhost:8080/api/company/get-\", \r\n        companyLogin: \"http://localhost:8080/api/company/login\",\r\n\r\n        customerLogin: \"http://localhost:8080/api/customer/login\", \r\n        customerPurchase: \"http://localhost:8080/api/customer/purchase-coupon\", \r\n        customer: \"http://localhost:8080/api/customer/\", \r\n        \r\n    };\r\n}\r\n\r\n// Global settings which are suitable only for production:\r\nclass ProductionGlobals extends Globals {\r\n    public urls = {\r\n        adminLogin: \"/api/admin/login\", \r\n        adminAdd: \"/api/admin/add-\",\r\n        adminUpdate: \"/api/admin/update-\",\r\n        adminDelete: \"/api/admin/delete-\",\r\n        adminGet: \"/api/admin/get-\",\r\n\r\n        company: \"/api/company/\", \r\n        companyGet: \"/api/company/get-\", \r\n        companyLogin: \"/api/company/login\", \r\n        \r\n        customerLogin: \"/api/customer/login\", \r\n        customerPurchase: \"/api/customer/purchase-coupon\", \r\n        customer: \"/api/customer/\", \r\n        \r\n    };\r\n}\r\n\r\n// Creating the correct object\r\nconst globals = process.env.NODE_ENV === \"development\" ? new DevelopmentGlobals() : new ProductionGlobals();\r\n\r\nexport default globals;","import axios from 'axios';\r\nimport store from '../Redux/Store';\r\n\r\nconst jwtAxios = axios.create();\r\n\r\njwtAxios.interceptors.request.use(request => {\r\n\r\n    request.headers = {\r\n        \"jwt\": store.getState().authState.user?.token\r\n    };\r\n\r\n    return request;\r\n});\r\n\r\nexport default jwtAxios;","import { Notyf } from \"notyf\";\r\n\r\nclass Notify {\r\n\r\n    private notification = new Notyf({ duration: 4000, position: { x: \"left\", y: \"top\" } });\r\n\r\n    public success(message: string) {\r\n        this.notification.success(message);\r\n    }\r\n\r\n    public error(err: any) {\r\n        const message = this.extractMessage(err);\r\n        this.notification.error(message);\r\n    }\r\n\r\n    private extractMessage(err: any): string {\r\n\r\n        if(typeof err === \"string\") {\r\n            return err;\r\n        }\r\n        \r\n        if(typeof err?.response?.data?.message === \"string\") {\r\n            return err.response.data.message;\r\n        }\r\n        \r\n        if(typeof err?.response?.data === \"string\") {\r\n            return err.response.data;\r\n        }\r\n        \r\n        if(Array.isArray(err?.response?.data)) {\r\n            return err.response.data[0];\r\n        }\r\n\r\n        if(typeof err?.message === \"string\") {\r\n            return err.message;\r\n        }\r\n\r\n        return \"Unknown error occurred, please try again.\";\r\n    }\r\n\r\n}\r\n\r\nconst notify = new Notify();\r\n\r\nexport default notify;\r\n\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { green, red } from \"@material-ui/core/colors\";\r\n\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    \r\n        primary: {\r\n          main: green[900]  ,\r\n        },\r\n        secondary: {\r\n          main: red[800],\r\n        },\r\n      },\r\n});\r\n\r\nexport default darkTheme;","import {\n  Button,\n  ButtonGroup,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\n\nfunction AddCompany(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CompanyModel>();\n\n  async function send(company: CompanyModel) {\n    try {\n      await jwtAxios.post<CompanyModel>(\n        globals.urls.adminAdd + \"company\",\n        company\n      );\n\n      notify.success(\"company has been added successfully\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"Box\" onSubmit={handleSubmit(send)}>\n      <ThemeProvider theme={darkTheme}>\n        <Typography align=\"center\" variant=\"h2\">\n          Add a Company\n        </Typography>\n\n        <TextField\n          {...register(\"name\", {\n            minLength: {\n              value: 3,\n              message: \"Name must be at least 3 letters.\",\n            },\n          })}\n          label=\"Name\"\n          variant=\"standard\"\n          required\n          fullWidth\n        />\n        {errors.name && (\n          <span className=\"ErrorMessage\">{errors.name.message}</span>\n        )}\n\n        <TextField\n          {...register(\"email\", {\n            minLength: {\n              value: 3,\n              message: \"Email must be at least 3 letters.\",\n            },\n            pattern: {\n              value: /\\S+@\\S+\\.\\S+/,\n              message: \"This field must be an Email\",\n            },\n          })}\n          label=\"Email\"\n          variant=\"standard\"\n          required\n          fullWidth\n        />\n        {errors.email && (\n          <span className=\"ErrorMessage\">{errors.email.message}</span>\n        )}\n\n        <TextField\n          {...register(\"password\", {\n            minLength: {\n              value: 3,\n              message: \"Email must be at least 3 letters.\",\n            },\n          })}\n          label=\"Password\"\n          variant=\"standard\"\n          type=\"password\"\n          required\n          fullWidth\n        />\n        {errors.password && (\n          <span className=\"ErrorMessage\">{errors.password.message}</span>\n        )}\n\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button type=\"submit\" color=\"primary\">\n            Send\n          </Button>\n          <Button type=\"reset\" color=\"secondary\">\n            Clear\n          </Button>\n        </ButtonGroup>\n      </ThemeProvider>\n    </form>\n  );\n}\n\nexport default AddCompany;\n","import {\n  Button,\n  ButtonGroup,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\nimport \"./AddCustomer.css\";\n\nfunction AddCustomer(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CustomerModel>();\n\n  async function send(customer: CustomerModel) {\n    try {\n      await jwtAxios.post<CustomerModel>(\n        globals.urls.adminAdd + \"customer\",\n        customer\n      );\n\n      notify.success(\"customer has been added successfully\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"AddCustomer Box\" onSubmit={handleSubmit(send)}>\n      <ThemeProvider theme={darkTheme}>\n        <Typography align=\"center\" variant=\"h2\">\n          Add a customer\n        </Typography>\n\n        <TextField\n          {...register(\"firstName\", {\n            minLength: {\n              value: 3,\n              message: \"First Name must be at least 3 letters.\",\n            },\n          })}\n          label=\"First Name\"\n          variant=\"standard\"\n          required\n          fullWidth\n        />\n        {errors.firstName && (\n          <span className=\"ErrorMessage\">{errors.firstName.message}</span>\n        )}\n\n        <TextField\n          {...register(\"lastName\", {\n            minLength: {\n              value: 3,\n              message: \"Last Name must be at least 3 letters.\",\n            },\n          })}\n          label=\"Last Name\"\n          variant=\"standard\"\n          required\n          fullWidth\n        />\n        {errors.lastName && (\n          <span className=\"ErrorMessage\">{errors.lastName.message}</span>\n        )}\n\n        <TextField\n          {...register(\"email\", {\n            minLength: {\n              value: 3,\n              message: \"Email must be at least 3 letters.\",\n            },\n            pattern: {\n              value: /\\S+@\\S+\\.\\S+/,\n              message: \"This field must be an Email\",\n            },\n          })}\n          label=\"Email\"\n          variant=\"standard\"\n          required\n          fullWidth\n        />\n        {errors.email && (\n          <span className=\"ErrorMessage\">{errors.email.message}</span>\n        )}\n\n        <TextField\n          {...register(\"password\", {\n            minLength: {\n              value: 3,\n              message: \"Email must be at least 3 letters.\",\n            },\n          })}\n          label=\"Password\"\n          variant=\"standard\"\n          type=\"password\"\n          required\n          fullWidth\n        />\n        {errors.password && (\n          <span className=\"ErrorMessage\">{errors.password.message}</span>\n        )}\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button type=\"submit\" color=\"primary\">\n            Send\n          </Button>\n          <Button type=\"reset\" color=\"secondary\">\n            Clear\n          </Button>\n        </ButtonGroup>\n      </ThemeProvider>\n    </form>\n  );\n}\nexport default AddCustomer;\n","import {\n  Button,\n  ButtonGroup,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\nimport \"./DeleteCompany.css\";\n\nfunction DeleteCompany(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CompanyModel>();\n\n  async function send(company: CompanyModel) {\n    try {\n      await jwtAxios.delete(globals.urls.adminDelete + \"company/\" + company.id);\n      notify.success(\"company with id: \" + company.id + \" has been deleted.\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <form className=\"DeleteCompany Box\" onSubmit={handleSubmit(send)}>\n        <Typography align=\"center\" variant=\"h2\">\n          Delete a Company\n        </Typography>\n\n        <TextField\n          {...register(\"id\", {\n            min: { value: 0, message: \"Company ID must be a positive number\" },\n          })}\n          label=\"Company ID\"\n          variant=\"filled\"\n          type=\"number\"\n          required\n          fullWidth\n        />\n        {errors.id && <span className=\"ErrorMessage\">{errors.id.message}</span>}\n        <br />\n        <br />\n\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n            Send\n          </Button>\n          <Button type=\"reset\" color=\"secondary\" variant=\"contained\">\n            Clear\n          </Button>\n        </ButtonGroup>\n      </form>\n    </ThemeProvider>\n  );\n}\nexport default DeleteCompany;\n","import {\n  Button,\n  ButtonGroup,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\nimport \"./DeleteCustomer.css\";\n\nfunction DeleteCustomer(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CustomerModel>();\n\n  async function send(customer: CustomerModel) {\n    try {\n      await jwtAxios.delete(\n        globals.urls.adminDelete + \"customer/\" + customer.id\n      );\n      notify.success(\"customer with id: \" + customer.id + \" has been deleted.\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"DeleteCustomer Box\" onSubmit={handleSubmit(send)}>\n      <ThemeProvider theme={darkTheme}>\n        <Typography align=\"center\" variant=\"h2\" >\n          Delete a Customer\n        </Typography>\n\n        <TextField\n          {...register(\"id\", {\n            min: { value: 0, message: \"Customer ID must be a positive number\" },\n          })}\n          label=\"Customer ID\"\n          variant=\"filled\"\n          fullWidth\n          type=\"number\"\n          required\n        />\n        {errors.id && <span className=\"ErrorMessage\">{errors.id.message}</span>}\n\n        <br />\n        <br />\n\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n            Send\n          </Button>\n          <Button type=\"reset\" color=\"secondary\" variant=\"contained\">\n            Clear\n          </Button>\n        </ButtonGroup>\n      </ThemeProvider>\n    </form>\n  );\n}\nexport default DeleteCustomer;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\n\ninterface GetAllCustomersState {\n  customers: CustomerModel[];\n}\n\nclass GetAllCustomers extends Component<{}, GetAllCustomersState> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      customers: [],\n    };\n  }\n    \n  public async componentDidMount() {\n    try {\n      const response = await jwtAxios.get<CustomerModel[]>(\n        globals.urls.adminGet + \"all-customers\"\n      );\n      this.setState({ customers: response.data });\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <Paper>\n          <TableContainer>\n            <Table stickyHeader aria-label=\"stickyHeader\">\n              <TableHead>\n                <TableCell>First Name: </TableCell>\n                <TableCell>Last Name: </TableCell>\n                <TableCell>Email: </TableCell>\n              </TableHead>\n              <TableBody>\n                {this.state.customers.map((customer) => (\n                  <TableRow key={customer.id}>\n                    <TableCell>{customer.firstName}</TableCell>\n                    <TableCell>{customer.lastName}</TableCell>\n                    <TableCell>{customer.email}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default GetAllCustomers;\n","import {\n  Button,\n  ButtonGroup,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\nimport \"./getOneCompany.css\";\n\nfunction GetOneCompany(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CompanyModel>();\n  const [company, setCompany] = useState(null);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <form\n        className=\"getOneCompany Box\"\n        onSubmit={handleSubmit(async (sendCompany: CompanyModel) => {\n          try {\n            const response = await jwtAxios.get<CompanyModel>(\n              globals.urls.adminGet + \"one-company/\" + sendCompany.id\n            );\n            const companySent = response.data;\n            setCompany(companySent);\n          } catch (err) {\n            notify.error(err);\n          }\n        })}\n      >\n        <Typography align=\"center\" variant=\"h2\" >\n          Get Company Details\n        </Typography>\n\n        <TextField\n          {...register(\"id\", {\n            min: { value: 0, message: \"Company ID must be a positive number\" },\n          })}\n          label=\"Company ID\"\n          variant=\"outlined\"\n          type=\"number\"\n          required\n          fullWidth\n        />\n        {errors.id && <span className=\"ErrorMessage\">{errors.id.message}</span>}\n\n        <br />\n        <br />\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n            Send\n          </Button>\n          <Button\n            type=\"reset\"\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => setCompany(null)}\n          >\n            Clear\n          </Button>\n        </ButtonGroup>\n        {company != null && (\n          <div className=\"companyDetails\">\n            <br /> name = {company.name}\n            <br />\n            <br /> email = {company.email}\n            <br />\n            <br /> password = {company.password}\n            <br />\n          </div>\n        )}\n      </form>\n    </ThemeProvider>\n  );\n}\n\nexport default GetOneCompany;\n","import {\n  Button,\n  ButtonGroup,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\nimport \"./getOneCustomer.css\";\n\nfunction GetOneCustomer(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CustomerModel>();\n  const [customer, setCustomer] = useState(null);\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <form\n        className=\"getOneCustomer Box\"\n        onSubmit={handleSubmit(async (sendCustomer: CustomerModel) => {\n          try {\n            const response = await jwtAxios.get<CustomerModel>(\n              globals.urls.adminGet + \"one-customer/\" + sendCustomer.id\n            );\n            const customerSent = response.data;\n            setCustomer(customerSent);\n          } catch (err) {\n            notify.error(err);\n          }\n        })}\n      >\n        <Typography align=\"center\" variant=\"h2\" >\n          Get Customer Details\n        </Typography>\n\n        <TextField\n          {...register(\"id\", {\n            min: { value: 0, message: \"Company ID must be a positive number\" },\n          })}\n          label=\"Customer ID\"\n          variant=\"outlined\"\n          type=\"number\"\n          fullWidth\n          required\n        />\n        {errors.id && <span className=\"ErrorMessage\">{errors.id.message}</span>}\n\n        <br />\n        <br />\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button type=\"submit\" color=\"primary\">\n            Send\n          </Button>\n          <Button\n            type=\"reset\"\n            color=\"secondary\"\n            onClick={() => setCustomer(null)}\n          >\n            Cancel\n          </Button>\n        </ButtonGroup>\n        {customer != null && (\n          <div className=\"customerDetails\">\n            <br /> First Name = {customer.firstName}\n            <br />\n            <br /> Last Name = {customer.lastName}\n            <br />\n            <br /> email = {customer.email}\n            <br />\n            <br /> password = {customer.password}\n          </div>\n        )}\n      </form>\n    </ThemeProvider>\n  );\n}\n\nexport default GetOneCustomer;\n","import {\n  Button,\n  ButtonGroup,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\nimport \"./UpdateCompany.css\";\n\nfunction UpdateCompany(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CompanyModel>();\n\n  async function send(company: CompanyModel) {\n    try {\n      const response = await jwtAxios.put<CompanyModel>(\n        globals.urls.adminUpdate + \"company\",\n        company\n      );\n      const addedCompany = response.data;\n\n      notify.success(\n        \"company with id: \" + addedCompany.id + \" has been updated.\"\n      );\n      // history.push(\"/products\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <form className=\"UpdateCompany Box\" onSubmit={handleSubmit(send)}>\n        <Typography align=\"center\" variant=\"h3\" >\n          Update Existing Company\n        </Typography>\n\n        <TextField\n          {...register(\"id\", {\n            min: { value: 0, message: \"Company ID must be a positive number\" },\n          })}\n          label=\"Company ID\"\n          type=\"number\"\n          fullWidth\n          required\n        />\n        {errors.id && <span className=\"ErrorMessage\">{errors.id.message}</span>}\n\n        <TextField\n          {...register(\"name\", {\n            minLength: {\n              value: 3,\n              message: \"Name must be at least 3 letters.\",\n            },\n          })}\n          label=\"Name\"\n          variant=\"standard\"\n          required\n          fullWidth\n        />\n        {errors.name && (\n          <span className=\"ErrorMessage\">{errors.name.message}</span>\n        )}\n\n        <TextField\n          {...register(\"email\", {\n            minLength: {\n              value: 3,\n              message: \"Email must be at least 3 letters.\",\n            },\n            pattern: {\n              value: /\\S+@\\S+\\.\\S+/,\n              message: \"This field must be an Email\",\n            },\n          })}\n          label=\"Email\"\n          variant=\"standard\"\n          required\n          fullWidth\n        />\n        {errors.email && (\n          <span className=\"ErrorMessage\">{errors.email.message}</span>\n        )}\n\n        <TextField\n          {...register(\"password\", {\n            minLength: {\n              value: 3,\n              message: \"Email must be at least 3 letters.\",\n            },\n          })}\n          label=\"Password\"\n          variant=\"standard\"\n          type=\"password\"\n          required\n          fullWidth\n        />\n        {errors.password && (\n          <span className=\"ErrorMessage\">{errors.password.message}</span>\n        )}\n\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button type=\"submit\" color=\"primary\">\n            Send\n          </Button>\n          <Button type=\"reset\" color=\"secondary\">\n            Cancel\n          </Button>\n        </ButtonGroup>\n      </form>\n    </ThemeProvider>\n  );\n}\n\nexport default UpdateCompany;\n","import { Button, ButtonGroup, TextField, Typography } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./UpdateCustomer.css\";\n\nfunction UpdateCustomer(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CustomerModel>();\n\n  async function send(customer: CustomerModel) {\n    try {\n      const response = await jwtAxios.put<CustomerModel>(\n        globals.urls.adminUpdate + \"customer\",\n        customer\n      );\n      const addedCustomer = response.data;\n\n      notify.success(\n        \"customer with id: \" + addedCustomer.id + \" has been updated.\"\n      );\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"UpdateCustomer Box\" onSubmit={handleSubmit(send)}>\n      <Typography align=\"center\" variant=\"h3\" >\n        Update Existing Customer\n      </Typography>\n\n      <TextField\n        {...register(\"id\", {\n          min: { value: 0, message: \"Customer ID must be a positive number\" },\n        })}\n        label=\"Company ID\"\n        type=\"number\"\n        fullWidth\n        required\n      />\n      {errors.id && <span className=\"ErrorMessage\">{errors.id.message}</span>}\n\n      <TextField\n        {...register(\"firstName\", {\n          minLength: {\n            value: 3,\n            message: \"First Name must be at least 3 letters.\",\n          },\n        })}\n        label=\"First Name\"\n        variant=\"standard\"\n        required\n        fullWidth\n      />\n      {errors.firstName && (\n        <span className=\"ErrorMessage\">{errors.firstName.message}</span>\n      )}\n\n      <TextField\n        {...register(\"lastName\", {\n          minLength: {\n            value: 3,\n            message: \"Last Name must be at least 3 letters.\",\n          },\n        })}\n        label=\"Last Name\"\n        variant=\"standard\"\n        required\n        fullWidth\n      />\n      {errors.lastName && (\n        <span className=\"ErrorMessage\">{errors.lastName.message}</span>\n      )}\n\n      <TextField\n        {...register(\"email\", {\n          minLength: {\n            value: 3,\n            message: \"Email must be at least 3 letters.\",\n          },\n          pattern: {\n            value: /\\S+@\\S+\\.\\S+/,\n            message: \"This field must be an Email\",\n          },\n        })}\n        label=\"Email\"\n        variant=\"standard\"\n        required\n        fullWidth\n      />\n      {errors.email && (\n        <span className=\"ErrorMessage\">{errors.email.message}</span>\n      )}\n\n      <TextField\n        {...register(\"password\", {\n          minLength: {\n            value: 3,\n            message: \"Email must be at least 3 letters.\",\n          },\n        })}\n        label=\"Password\"\n        variant=\"standard\"\n        type=\"password\"\n        required\n        fullWidth\n      />\n      {errors.password && (\n        <span className=\"ErrorMessage\">{errors.password.message}</span>\n      )}\n\n      <ButtonGroup variant=\"text\" fullWidth>\n        <Button type=\"submit\" color=\"primary\">\n          Send\n        </Button>\n        <Button type=\"reset\" color=\"secondary\">\n          Cancel\n        </Button>\n      </ButtonGroup>\n    </form>\n  );\n}\n\nexport default UpdateCustomer;\n","export enum UserType {\r\n    ADMIN = \"ADMIN\",\r\n    COMPANY = \"COMPANY\",\r\n    CUSTOMER = \"CUSTOMER\"\r\n}\r\n\r\nexport class UserModel{\r\n    public id: string;\r\n    public email: string;\r\n    public password: string;\r\n    public token: string;\r\n    public userType: UserType\r\n}","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\n\ninterface CompaniesTableState {\n  companies: CompanyModel[];\n}\n\nclass CompaniesTable extends Component<{}, CompaniesTableState> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      companies: [],\n    };\n  }\n\n  public async componentDidMount() {\n    try {\n      const response = await jwtAxios.get<CompanyModel[]>(\n        globals.urls.adminGet + \"all-companies\"\n      );\n      this.setState({ companies: response.data });\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n        <ThemeProvider theme={darkTheme}>\n          <Paper>\n            <TableContainer>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableCell>Name: </TableCell>\n                  <TableCell>Email: </TableCell>\n                </TableHead>\n                <TableBody>\n                  {this.state.companies.map((company) => (\n                    <TableRow key={company.id}>\n                      <TableCell>{company.name}</TableCell>\n                      <TableCell>{company.email}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </ThemeProvider>\n    );\n  }\n}\n\nexport default CompaniesTable;\n","import { Component, ReactNode } from \"react\";\n\ninterface MethodCardState{\n  ShowInnerComponent: boolean;\n}\n\ninterface MethodCardProps {\n  name: string;\n  description: string;\n  sign: string;\n  children: ReactNode;\n}\n\nclass MethodCard extends Component<MethodCardProps, MethodCardState> {\n  \n  public constructor(props: MethodCardProps) {\n    super(props);\n    this.state = {\n      ShowInnerComponent: false\n    }\n  }\n  \n  public render(): JSX.Element {\n\n  return (\n    <div className=\"menuCard__inner\" onClick={() => this.setState({ ShowInnerComponent: true})}>\n      {this.state.ShowInnerComponent === true ? (\n        <div className=\"menuCard__shape\">\n          <div className=\"menuCard__method\">\n            {this.props.children}\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"menuCard__trace\">{this.props.sign}</div>\n            <h5>{this.props.name}</h5>\n            <p>{this.props.description}</p>\n        </>\n      )}\n    </div>\n  );\n}\n}\nexport default MethodCard;\n","import { Component } from \"react\";\nimport AddCompany from \"../AddCompany/AddCompany\";\nimport AddCustomer from \"../AddCustomer/AddCustomer\";\nimport DeleteCompany from \"../DeleteCompany/DeleteCompany\";\nimport DeleteCustomer from \"../DeleteCustomer/DeleteCustomer\";\nimport GetAllCustomers from \"../GetAllCustomers/GetAllCustomers\";\nimport GetOneCompany from \"../getOneCompany/getOneCompany\";\nimport GetOneCustomer from \"../getOneCustomer/getOneCustomer\";\nimport UpdateCompany from \"../UpdateCompany/UpdateCompany\";\nimport UpdateCustomer from \"../UpdateCustomer/UpdateCustomer\";\nimport GetAllCompanies from \"../GetAllCompanies/GetAllCompanies\";\nimport \"./AdminMenu.scss\";\nimport store from \"../../../Redux/Store\";\nimport notify from \"../../../Services/Notification\";\nimport { UserType } from \"../../../Models/UserModel\";\nimport { RouteComponentProps } from \"react-router\";\nimport MethodCard from \"../MethodCard/MethodCard\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface AdminMenuProps extends RouteComponentProps {}\n\nclass AdminMenu extends Component<AdminMenuProps> {\n  public constructor(props: AdminMenuProps) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (store.getState().authState.user?.userType !== UserType.ADMIN) {\n      notify.error(\"please log in as admin in order to access the Admin Menu\");\n      this.props.history.push(\"/home\");\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <Typography align=\"center\" variant=\"h1\">Admin Methods Menu</Typography>\n        <Typography align=\"center\" variant=\"h5\">\n          Choose a method and click on it (magic will happen)\n        </Typography>\n        <ul className=\"AdminMenu\">\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Add company\"\n              description=\"Add a new company to the DB\"\n              sign=\"&#10009;\"\n            >\n              <AddCompany />\n            </MethodCard>\n          </li>\n\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Update Company\"\n              description=\"Update existing company\"\n              sign=\"&#8607;\"\n            >\n              <UpdateCompany />\n            </MethodCard>\n          </li>\n\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Delete Company\"\n              description=\"Completely delete existing company from DB\"\n              sign=\"&#10006;\"\n            >\n              <DeleteCompany />\n            </MethodCard>\n          </li>\n\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Get All Companies\"\n              description=\"Get a list of all existing Companies\"\n              sign=\"&darr;\"\n            >\n              <GetAllCompanies />\n            </MethodCard>\n          </li>\n\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Get One Company\"\n              description=\"Get one company by it's ID\"\n              sign=\"&darr;\"\n            >\n              <GetOneCompany />\n            </MethodCard>\n          </li>\n\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Add Customer\"\n              description=\"Add customer to the DB\"\n              sign=\"&#10009;\"\n            >\n              <AddCustomer />\n            </MethodCard>\n          </li>\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Update Customer\"\n              description=\"Update existing customer\"\n              sign=\"&#8607;\"\n            >\n              <UpdateCustomer />\n            </MethodCard>\n          </li>\n\n          <li className=\"menuCard\">\n            <MethodCard\n              name=\"Delete Customer\"\n              description=\"completely delete existing customer\"\n              sign=\"&#10006;\"\n            >\n              <DeleteCustomer />\n            </MethodCard>\n          </li>\n\n          <li\n            className=\"menuCard\"\n            onClick={() => this.setState({ getAllCustomers: true })}\n          >\n            <MethodCard\n              name=\"Get All Customers\"\n              description=\"Get all customers from the DB\"\n              sign=\"&darr;\"\n            >\n              <GetAllCustomers />\n            </MethodCard>\n          </li>\n\n          <li\n            className=\"menuCard\"\n            onClick={() => this.setState({ getOneCustomer: true })}\n          >\n            <MethodCard\n              name=\"Get One Customer\"\n              description=\"Get one customer from the DB\"\n              sign=\"&darr;\"\n            >\n              <GetOneCustomer />\n            </MethodCard>\n          </li>\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default AdminMenu;\n","import {\n  Button,\n  ButtonGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  ThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport CredentialsModel from \"../../../../Models/CredentialsModel\";\nimport { UserModel, UserType } from \"../../../../Models/UserModel\";\nimport { loginAction } from \"../../../../Redux/AuthState\";\nimport store from \"../../../../Redux/Store\";\nimport globals from \"../../../../Services/Globals\";\nimport notify from \"../../../../Services/Notification\";\nimport darkTheme from \"../../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\nimport \"./SignForm.css\";\n\nfunction SignForm(): JSX.Element {\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CredentialsModel>();\n\n  async function send(credentials: CredentialsModel) {\n    try {\n      if (credentials.userType === UserType.ADMIN) {\n        const response = await axios.post<UserModel>(\n          globals.urls.adminLogin,\n          credentials\n        );\n        store.dispatch(loginAction(response.data));\n        notify.success(\"You have been successfully logged in!\");\n        history.push(\"/admin\");\n      }\n      if (credentials.userType === UserType.COMPANY) {\n        const response = await axios.post<UserModel>(\n          globals.urls.companyLogin,\n          credentials\n        );\n        store.dispatch(loginAction(response.data));\n        notify.success(\"You have been successfully logged in!\");\n        history.push(\"/company\");\n      }\n      if (credentials.userType === UserType.CUSTOMER) {\n        const response = await axios.post<UserModel>(\n          globals.urls.customerLogin,\n          credentials\n        );\n        store.dispatch(loginAction(response.data));\n        notify.success(\"You have been successfully logged in!\");\n        history.push(\"/customer\");\n      }\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <form className=\"SignForm Box\" onSubmit={handleSubmit(send)}>\n        <Typography align=\"center\" variant=\"h2\" >\n          Login\n        </Typography>\n\n        <TextField\n          {...register(\"email\", {\n            required: \"Missing Field\",\n            minLength: {\n              value: 3,\n              message: \"Email must be at least 3 letters.\",\n            },\n            pattern: {\n              value: /\\S+@\\S+\\.\\S+/,\n              message: \"This field must be an Email\",\n            },\n          })}\n          label=\"Email\"\n          variant=\"outlined\"\n          fullWidth\n        />\n        {errors.email && <p className=\"ErrorMessage\">{errors.email.message}</p>}\n        <br />\n        <br />\n\n        <TextField\n          {...register(\"password\", {\n            required: \"Missing Field\",\n            minLength: {\n              value: 3,\n              message: \"Password must be at least 3 letters.\",\n            },\n          })}\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          fullWidth\n        />\n        {errors.password && (\n          <p className=\"ErrorMessage\">{errors.password.message}</p>\n        )}\n\n        <br />\n        <br />\n\n        <InputLabel>Customer Type</InputLabel>\n        <Select {...register(\"userType\")} variant=\"outlined\" fullWidth required>\n        <InputLabel>Customer Type</InputLabel>\n          <MenuItem value={\"ADMIN\"}>Admin</MenuItem>\n          <MenuItem value={\"COMPANY\"}>Company</MenuItem>\n          <MenuItem value={\"CUSTOMER\"}>Customer</MenuItem>\n        </Select>\n        <br />\n        <br />\n        <ButtonGroup variant=\"text\" fullWidth>\n          <Button\n            className=\"muiButton\"\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Send\n          </Button>\n          <Button type=\"reset\" color=\"secondary\" variant=\"contained\">\n            Cancel\n          </Button>\n        </ButtonGroup>\n      </form>\n    </ThemeProvider>\n  );\n}\n\nexport default SignForm;\n","import SignForm from \"../AuthArea/SignForm/SignForm\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Main.css\";\n\nfunction Main(): JSX.Element {\n  return (\n    <div className=\"Main\">\n      <p className=\"text\">\n        Hello and welcome to my humble coupons project! <br />\n        If you wish to learn how to use the site or contact me (hopefully both)\n        go to the <NavLink to=\"/about\">About Me</NavLink> page. <br /> <br />\n        If you already know how to use it you probably wish to login: <br />\n      </p>\n      <div className=\"signForm\">\n        <SignForm />\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import {\n  Button,\n  ButtonGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./AddCoupon.css\";\n\nfunction AddCoupon(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CouponModel>();\n\n  async function send(coupon: CouponModel) {\n    try {\n      await jwtAxios.post<CouponModel>(globals.urls.company + \"add\", coupon);\n\n      notify.success(\"coupon has been added.\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"AddCoupon Box\" onSubmit={handleSubmit(send)}>\n      <Typography align=\"center\" variant=\"h2\"  color=\"textPrimary\">\n        Add new Coupon\n      </Typography>\n      <TextField\n        {...register(\"title\", {\n          minLength: {\n            value: 5,\n            message: \"Title must be at least 5 letters.\",\n          },\n        })}\n        label=\"Title\"\n        variant=\"standard\"\n        type=\"text\"\n        required\n      />\n      {errors.title && (\n        <span className=\"ErrorMessage\">{errors.title.message}</span>\n      )}\n      <TextField\n        {...register(\"amount\", {\n          min: {\n            value: 1,\n            message:\n              \"As my teacher user to say: there can't be a negative number of apples \",\n          },\n        })}\n        label=\"Amount\"\n        variant=\"standard\"\n        type=\"number\"\n        required\n      />\n      {errors.amount && (\n        <span className=\"ErrorMessage\">{errors.amount.message}</span>\n      )}\n\n      <TextField\n        {...register(\"price\", {\n          pattern: {\n            value: /^\\d*\\.?\\d*$/,\n            message: \"Must be a valid number\",\n          },\n          min: {\n            value: 1,\n            message: \"price must be a positive number \",\n          },\n        })}\n        label=\"Price\"\n        variant=\"standard\"\n        type=\"text\"\n        required\n      />\n      {errors.price && (\n        <span className=\"ErrorMessage\">{errors.price.message}</span>\n      )}\n\n      <TextField\n        {...register(\"description\")}\n        label=\"Description\"\n        variant=\"standard\"\n      />\n\n      <TextField\n        {...register(\"startDate\")}\n        label=\"Set Start Date\"\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        required\n      />\n\n      <TextField\n        {...register(\"endDate\")}\n        label=\"Set End Date\"\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        required\n      />\n      {errors.endDate && (\n        <span className=\"ErrorMessage\">\n          End date Must be in the future (sadly our time machine is out of\n          order, come check again in the past)\n        </span>\n      )}\n\n      <InputLabel>\n        <br />\n        Category:\n      </InputLabel>\n      <Select {...register(\"category\")} className=\"select\" required>\n        <InputLabel>Category</InputLabel>\n        <MenuItem value=\"FOOD\">Food</MenuItem>\n        <MenuItem value=\"ELECTRICITY\">Electricity</MenuItem>\n        <MenuItem value=\"RESTAURANT\">Restaurant</MenuItem>\n        <MenuItem value=\"VACATION\">Vacation</MenuItem>\n        <MenuItem value=\"GARMENT\">Garment</MenuItem>\n        <MenuItem value=\"BOOK\">Book</MenuItem>\n      </Select>\n      <ButtonGroup variant=\"text\" fullWidth>\n        <Button type=\"submit\" color=\"primary\">\n          Send\n        </Button>\n        <Button type=\"reset\" color=\"secondary\">\n          Clear\n        </Button>\n      </ButtonGroup>\n    </form>\n  );\n}\n\nexport default AddCoupon;\n","import { Button, ButtonGroup, TextField, Typography } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\n\nfunction DeleteCoupon(): JSX.Element {\n  const { register, handleSubmit } = useForm<CouponModel>();\n\n  async function send(coupon: CouponModel) {\n    try {\n      await jwtAxios.delete(globals.urls.company + \"delete/\" + coupon.id);\n      notify.success(\"coupon with id: \" + coupon.id + \" has been deleted.\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"DeleteCoupon Box\" onSubmit={handleSubmit(send)}>\n      <Typography align=\"center\" variant=\"h2\">\n        Delete Coupon\n      </Typography>\n\n      <TextField\n        {...register(\"id\")}\n        label=\"Coupon ID\"\n        variant=\"outlined\"\n        type=\"number\"\n        required\n        fullWidth\n      />\n      <br />\n      <br />\n\n      <ButtonGroup variant=\"text\" fullWidth>\n        <Button type=\"submit\" color=\"primary\">\n          Send\n        </Button>\n        <Button type=\"reset\" color=\"secondary\">\n          Clear\n        </Button>\n      </ButtonGroup>\n    </form>\n  );\n}\n\nexport default DeleteCoupon;\n","import {\n  Button,\n  ButtonGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./UpdateCoupon.css\";\n\nfunction UpdateCoupon(): JSX.Element {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CouponModel>();\n\n  async function send(coupon: CouponModel) {\n    try {\n      await jwtAxios.put<CouponModel>(globals.urls.company + \"update\", coupon);\n      notify.success(\"coupon has been updated successfully.\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"UpdateCoupon Box\" onSubmit={handleSubmit(send)}>\n      <Typography align=\"center\" variant=\"h2\"  color=\"textPrimary\">\n        Update Existing Coupon\n      </Typography>\n      <TextField\n        {...register(\"id\", {\n          min: { value: 0, message: \"Company ID must be a positive number\" },\n        })}\n        label=\"Company ID\"\n        type=\"number\"\n        required\n      />\n      {errors.id && <span className=\"ErrorMessage\">{errors.id.message}</span>}\n      <TextField\n        {...register(\"title\", {\n          minLength: {\n            value: 5,\n            message: \"Title must be at least 5 letters.\",\n          },\n        })}\n        label=\"Title\"\n        variant=\"standard\"\n        type=\"text\"\n        required\n      />\n      {errors.title && (\n        <span className=\"ErrorMessage\">{errors.title.message}</span>\n      )}\n\n      <TextField\n        {...register(\"amount\", {\n          min: {\n            value: 1,\n            message:\n              \"As my teacher user to say: there can't be a negative number of apples \",\n          },\n        })}\n        label=\"Amount\"\n        variant=\"standard\"\n        type=\"number\"\n        required\n      />\n      {errors.amount && (\n        <span className=\"ErrorMessage\">{errors.amount.message}</span>\n      )}\n\n      <TextField\n        {...register(\"price\", {\n          min: {\n            value: 1,\n            message: \"price must be a positive number \",\n          },\n        })}\n        label=\"Price\"\n        variant=\"standard\"\n        type=\"text\"\n        required\n      />\n      {errors.price && (\n        <span className=\"ErrorMessage\">{errors.price.message}</span>\n      )}\n\n      <TextField\n        {...register(\"description\")}\n        label=\"Description\"\n        variant=\"standard\"\n      />\n      <TextField\n        {...register(\"startDate\")}\n        label=\"Set Start Date\"\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        required\n      />\n\n      <TextField\n        {...register(\"endDate\")}\n        label=\"Set End Date\"\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        required\n      />\n      <InputLabel>\n        <br />\n        Category:\n      </InputLabel>\n      <Select {...register(\"category\")} className=\"select\" required>\n        <InputLabel>Category</InputLabel>\n        <MenuItem value=\"FOOD\">Food</MenuItem>\n        <MenuItem value=\"ELECTRICITY\">Electricity</MenuItem>\n        <MenuItem value=\"RESTAURANT\">Restaurant</MenuItem>\n        <MenuItem value=\"VACATION\">Vacation</MenuItem>\n        <MenuItem value=\"GARMENT\">Garment</MenuItem>\n        <MenuItem value=\"BOOK\">Book</MenuItem>\n      </Select>\n      <br />\n      <br />\n      <br />\n      <ButtonGroup variant=\"text\" fullWidth>\n        <Button type=\"submit\" color=\"primary\">\n          Send\n        </Button>\n        <Button type=\"reset\" color=\"secondary\">\n          Clear\n        </Button>\n      </ButtonGroup>\n    </form>\n  );\n}\n\nexport default UpdateCoupon;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport \"./CouponCard.scss\";\n\ninterface CouponCardProps {\n  coupons: CouponModel[];\n}\n\nclass CouponCard extends Component<CouponCardProps> {\n  public constructor(props: CouponCardProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <Paper>\n        <TableContainer>\n          <Table stickyHeader aria-label=\"stickyHeader\">\n            <TableHead>\n              <TableCell>Title: </TableCell>\n              <TableCell>Description: </TableCell>\n              <TableCell>Category: </TableCell>\n              <TableCell>End date: </TableCell>\n              <TableCell>Price: </TableCell>\n              <TableCell>Company Name: </TableCell>\n            </TableHead>\n            <TableBody>\n                {this.props.coupons.map((coupon) => (\n                  <TableRow\n                    hover\n                    role=\"checkbox\"\n                    className=\"CouponCard\"\n                    key={coupon.id}\n                  >\n                    <TableCell>{coupon.title}</TableCell>\n                    <TableCell>{coupon.description}</TableCell>\n                    <TableCell>{coupon.category}</TableCell>\n                    <TableCell>{coupon.endDate}</TableCell>\n                    <TableCell>{coupon.price}</TableCell>\n                    <TableCell>{coupon.company.name}</TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    );\n  }\n}\n\nexport default CouponCard;\n","import { Component } from \"react\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CouponCard from \"../../SharedArea/CouponCard/CouponCard\";\n\ninterface GetCompanyCouponsState {\n  coupons: CouponModel[];\n}\n\nclass GetCompanyCoupons extends Component<{}, GetCompanyCouponsState> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      coupons: [],\n    };\n  }\n\n  public async componentDidMount() {\n    try {\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.company + \"get-coupons\"\n      );\n      this.setState({ coupons: response.data });\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className=\"GetCompanyCoupons\">\n        <CouponCard coupons={this.state.coupons} />\n      </div>\n    );\n  }\n}\n\nexport default GetCompanyCoupons;\n","import { Button, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CouponCard from \"../../SharedArea/CouponCard/CouponCard\";\n\ninterface enteredPrice {\n  maxPrice: number;\n}\n\nfunction GetCompanyCouponsByMaxPrice(): JSX.Element {\n  const [coupons, setCoupons] = useState<Array<CouponModel>>([]);\n  const [couponsReplacement, setCouponsReplacement] = useState(\n    \"no price is chosen yet.\"\n  );\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<enteredPrice>();\n\n  async function send(price: enteredPrice) {\n    try {\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.company + \"get-coupons-by-price/\" + price.maxPrice\n      );\n      // let the user know he has no coupons in the category\n      if (response.data.length === 0) {\n        setCouponsReplacement(\"You have no coupons under this price\");\n      } else {\n        setCouponsReplacement(\"\");\n      }\n\n      setCoupons(response.data);\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(send)}>\n        <TextField\n          {...register(\"maxPrice\", {\n            pattern: {\n              value: /^\\d*\\.?\\d*$/,\n              message: \"Must be a valid number\",\n            },\n            min: {\n              value: 0,\n              message:\n                \"last time i checked, we didn't offer to pay customers (the price is negative)\",\n            },\n          })}\n          label=\"Maximum Price\"\n          variant=\"standard\"\n          type=\"text\"\n          required\n        />\n        {errors.maxPrice && (\n          <span className=\"ErrorMessage\">\n            <br />\n            {errors.maxPrice.message}\n            <br />\n          </span>\n        )}\n\n        <Button type=\"submit\">send</Button>\n      </form>\n      <ul className=\"CompanyMenu\">\n        <CouponCard coupons={coupons} />\n        {couponsReplacement}\n      </ul>\n    </>\n  );\n}\n\nexport default GetCompanyCouponsByMaxPrice;\n","import { InputLabel, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CouponCard from \"../../SharedArea/CouponCard/CouponCard\";\n\ninterface GetCompanyCouponsByCategoryState {\n  coupons: CouponModel[];\n  couponsReplacement: string;\n}\n\nclass GetCompanyCouponsByCategory extends Component<\n  {},\n  GetCompanyCouponsByCategoryState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      coupons: [],\n      couponsReplacement: \"no category is chosen yet. who is your chosen one?\",\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <Typography align=\"center\" variant=\"h5\">\n          Category to Show:\n        </Typography>\n        <Select\n          variant=\"filled\"\n          fullWidth\n          onChange={async (selectItem) => {\n            try {\n              const response = await jwtAxios.get<CouponModel[]>(\n                globals.urls.companyGet +\n                  \"coupons-by-category/\" +\n                  selectItem.target.value\n              );\n              // let the user know he has no coupons in the category\n              if (response.data.length === 0) {\n                this.setState({\n                  couponsReplacement: \"You have no coupons in this category\",\n                });\n              } else {\n                this.setState({ couponsReplacement: \"\" });\n              }\n              this.setState({ coupons: response.data });\n            } catch (err) {\n              notify.error(err);\n            }\n          }}\n        >\n          <InputLabel>Category</InputLabel>\n          <MenuItem value=\"FOOD\">Food</MenuItem>\n          <MenuItem value=\"ELECTRICITY\">Electricity</MenuItem>\n          <MenuItem value=\"RESTAURANT\">Restaurant</MenuItem>\n          <MenuItem value=\"VACATION\">Vacation</MenuItem>\n          <MenuItem value=\"GARMENT\">Garment</MenuItem>\n          <MenuItem value=\"BOOK\">Book</MenuItem>\n        </Select>\n\n        <ul className=\"CompanyMenu\">\n          <CouponCard coupons={this.state.coupons} />\n          {this.state.couponsReplacement}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default GetCompanyCouponsByCategory;\n","import { Typography } from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport CompanyModel from \"../../../Models/CompanyModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./GetCompanyDetails.css\";\n\ninterface GetCompanyDetailsState {\n  company: CompanyModel;\n}\n\nclass GetCompanyDetails extends Component<{}, GetCompanyDetailsState> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      company: null,\n    };\n  }\n\n  public async componentDidMount() {\n    try {\n      const response = await jwtAxios.get<CompanyModel>(\n        globals.urls.company + \"company\"\n      );\n      const companySent = response.data;\n      this.setState({ company: companySent });\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className=\"GetCompanyDetails\">\n        <Typography align=\"center\" variant=\"h2\">Get Company Details</Typography>\n        {this.state.company != null && (\n          <div>\n            <br /> Name = {this.state.company.name}\n            <br /> email = {this.state.company.email}\n            <br /> password ={this.state.company.password}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default GetCompanyDetails;\n","import { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport AddCoupon from \"../AddCoupon/AddCoupon\";\r\nimport \"./CompanyMenu.css\";\r\nimport DeleteCoupon from \"../DeleteCoupon/DeleteCoupon\";\r\nimport UpdateCoupon from \"../UpdateCoupon/UpdateCoupon\";\r\nimport GetCompanyCoupons from \"../GetCompanyCoupons/GetCompanyCoupons\";\r\nimport GetCompanyCouponsByMaxPrice from \"../GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice\";\r\nimport GetCompanyCouponsByCategory from \"../GetCompanyCouponsByCategory/GetCompanyCouponsByCategory\";\r\nimport GetCompanyDetails from \"../GetCompanyDetails/GetCompanyDetails\";\r\nimport { InputLabel, MenuItem, Select, ThemeProvider, Typography } from \"@material-ui/core\";\r\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\r\nimport store from \"../../../Redux/Store\";\r\nimport { UserType } from \"../../../Models/UserModel\";\r\nimport notify from \"../../../Services/Notification\";\r\n\r\ninterface CompanyMenuState {\r\n  methodToShow: string;\r\n}\r\n\r\ninterface CompanyMenuProps extends RouteComponentProps {}\r\n\r\nclass CompanyMenu extends Component<CompanyMenuProps, CompanyMenuState> {\r\n  public constructor(props: CompanyMenuProps) {\r\n    super(props);\r\n    this.state = {\r\n      methodToShow: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (store.getState().authState.user?.userType !== UserType.COMPANY) {\r\n      notify.error(\"please log in as company in order to access the Company Menu\");\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ThemeProvider theme={darkTheme}>\r\n        <div className=\"CompanyMenu\">\r\n          <Typography variant=\"h2\" align=\"center\">Company Area</Typography>\r\n          <Typography variant=\"h4\" align=\"center\">Choose method from the menu below</Typography>\r\n          <br/>\r\n          <br/>\r\n          <InputLabel>Methods List:</InputLabel>\r\n          <Select\r\n            variant=\"filled\"\r\n            fullWidth\r\n            onChange={(selectItem) => {\r\n              this.setState({ methodToShow: String(selectItem.target.value) });\r\n            }}\r\n          >\r\n            <InputLabel>Methods list</InputLabel>\r\n            <MenuItem value=\"AddCoupon\">Add Coupon</MenuItem>\r\n            <MenuItem value=\"UpdateCoupon\">Update Coupon</MenuItem>\r\n            <MenuItem value=\"DeleteCoupon\">Delete Coupon</MenuItem>\r\n            <MenuItem value=\"GetCompanyCoupons\">All of Your Coupons</MenuItem>\r\n            <MenuItem value=\"GetCompanyCouponsByCategory\">\r\n              Coupons By Category\r\n            </MenuItem>\r\n            <MenuItem value=\"GetCompanyCouponsByMaxPrice\">\r\n              Coupons By Max Price\r\n            </MenuItem>\r\n            <MenuItem value=\"GetCompanyDetails\">Company Details</MenuItem>\r\n          </Select>\r\n\r\n          <div className=\"methodToShow\">\r\n            {this.state.methodToShow === \"AddCoupon\" && <AddCoupon />}\r\n            {this.state.methodToShow === \"UpdateCoupon\" && <UpdateCoupon />}\r\n            {this.state.methodToShow === \"DeleteCoupon\" && <DeleteCoupon />}\r\n            {this.state.methodToShow === \"GetCompanyCoupons\" && (\r\n              <GetCompanyCoupons />\r\n            )}\r\n            {this.state.methodToShow === \"GetCompanyCouponsByCategory\" && (\r\n              <GetCompanyCouponsByCategory />\r\n            )}\r\n            {this.state.methodToShow === \"GetCompanyCouponsByMaxPrice\" && (\r\n              <GetCompanyCouponsByMaxPrice />\r\n            )}\r\n            {this.state.methodToShow === \"GetCompanyDetails\" && (\r\n              <GetCompanyDetails />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CompanyMenu;\r\n","import { Component } from \"react\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CouponCard from \"../../SharedArea/CouponCard/CouponCard\";\n\ninterface GetCustomerCouponsState {\n  coupons: CouponModel[];\n}\n\nclass GetCustomerCoupons extends Component<{}, GetCustomerCouponsState> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      coupons: [],\n    };\n  }\n\n  public async componentDidMount() {\n    try {\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.customer + \"all-coupons\"\n      );\n      this.setState({ coupons: response.data });\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <ul className=\"CustomerMenu\">\n        <CouponCard coupons={this.state.coupons} />\n      </ul>\n    );\n  }\n}\n\nexport default GetCustomerCoupons;\n","import { InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CouponCard from \"../../SharedArea/CouponCard/CouponCard\";\n\ninterface GetCustomerCouponsByCategoryState {\n  coupons: CouponModel[];\n  couponsReplacement: string;\n}\n\nclass GetCustomerCouponsByCategory extends Component<\n  {},\n  GetCustomerCouponsByCategoryState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      coupons: [],\n      couponsReplacement: \"no category is chosen yet. what is your chosen one?\"\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <InputLabel>Choose Category: </InputLabel>\n        <Select\n          variant=\"filled\"\n          fullWidth\n          onChange={async (selectItem) => {\n            try {\n              const response = await jwtAxios.get<CouponModel[]>(\n                globals.urls.customer +\n                  \"coupons-by-category/\" +\n                  selectItem.target.value\n              );\n              // let the user know he has no coupons in the category\n              if(response.data.length === 0){\n                this.setState({couponsReplacement: \"You have no coupons in this category\"})\n              } else {\n                this.setState({couponsReplacement: \"\"})\n              }\n              this.setState({ coupons: response.data });\n            } catch (err) {\n              notify.error(err);\n            }\n          }}\n        >\n          <InputLabel>Category</InputLabel>\n          <MenuItem value=\"FOOD\">Food</MenuItem>\n          <MenuItem value=\"ELECTRICITY\">Electricity</MenuItem>\n          <MenuItem value=\"RESTAURANT\">Restaurant</MenuItem>\n          <MenuItem value=\"VACATION\">Vacation</MenuItem>\n          <MenuItem value=\"GARMENT\">Garment</MenuItem>\n          <MenuItem value=\"BOOK\">Book</MenuItem>\n        </Select>\n\n        <ul className=\"CustomerMenu\">\n          <CouponCard coupons={this.state.coupons} />\n          {this.state.couponsReplacement}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default GetCustomerCouponsByCategory;\n","import { Button, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { CouponModel } from \"../../../Models/CouponModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport CouponCard from \"../../SharedArea/CouponCard/CouponCard\";\n\ninterface enteredPrice {\n  maxPrice: number;\n}\n\nfunction GetCustomerCouponsByMaxPrice(): JSX.Element {\n  const [coupons, setCoupons] = useState<Array<CouponModel>>([]);\n  const [couponsReplacement, setCouponsReplacement] = useState(\n    \"no price is chosen yet.\"\n  );\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<enteredPrice>();\n\n  async function send(price: enteredPrice) {\n    try {\n      const response = await jwtAxios.get<CouponModel[]>(\n        globals.urls.customer + \"coupons-by-price/\" + price.maxPrice\n      );\n      // let the user know he has no coupons in the category\n      if (response.data.length === 0) {\n        setCouponsReplacement(\"You have no coupons under this price\");\n      } else {\n        setCouponsReplacement(\"\");\n      }\n      setCoupons(response.data);\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(send)}>\n        <TextField\n          {...register(\"maxPrice\", {\n            pattern: {\n              value: /^\\d*\\.?\\d*$/,\n              message: \"Must be a valid number\",\n            },\n            min: {\n              value: 0,\n              message:\n                \"last time i checked, we didn't offer to pay customers (the price is negative)\",\n            },\n          })}\n          label=\"Maximum Price\"\n          variant=\"standard\"\n          type=\"text\"\n          required\n        />\n        {errors.maxPrice && (\n          <span className=\"ErrorMessage\">\n            <br />\n            {errors.maxPrice.message}\n            <br />\n          </span>\n        )}\n        <Button type=\"submit\">send</Button>\n      </form>\n      <ul className=\"CustomerMenu\">\n        <CouponCard coupons={coupons} />\n        {couponsReplacement}\n      </ul>\n    </>\n  );\n}\n\nexport default GetCustomerCouponsByMaxPrice;\n","import { Typography } from \"@material-ui/core\";\nimport { Component } from \"react\";\nimport CustomerModel from \"../../../Models/CustomerModel\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\nimport \"./GetCustomerDetails.css\";\n\ninterface GetCustomerDetailsState {\n  customer: CustomerModel;\n}\n\nclass GetCustomerDetails extends Component<{}, GetCustomerDetailsState> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      customer: null,\n    };\n  }\n\n  public async componentDidMount() {\n      try {\n        const response = await jwtAxios.get<CustomerModel>(\n          globals.urls.customer + \"customer\"\n        );\n        const customerSent = response.data;\n        this.setState({ customer: customerSent });\n      } catch (err) {\n        notify.error(err);\n      }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className=\"GetCustomerDetails\">\n        <Typography align=\"center\" variant=\"h2\">\n          Get Customer Details\n        </Typography>\n        <div>\n          {this.state.customer != null && (\n            <div>\n              First Name = {this.state.customer.firstName}\n              <br />\n              Last Name = {this.state.customer.lastName}\n              <br />\n              email = {this.state.customer.email}\n              <br />\n              password = {this.state.customer.password}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GetCustomerDetails;\n","import { Button, ButtonGroup, TextField } from \"@material-ui/core\";\nimport { useForm } from \"react-hook-form\";\nimport globals from \"../../../Services/Globals\";\nimport jwtAxios from \"../../../Services/JwtAxios\";\nimport notify from \"../../../Services/Notification\";\n\ninterface FormToSend {\n  couponId: number;\n}\n\nfunction PurchaseCoupon(): JSX.Element {\n  const { register, handleSubmit } = useForm<FormToSend>();\n  async function send(couponId: FormToSend) {\n    try {\n      await jwtAxios.put(\n        globals.urls.customerPurchase + \"/\" + couponId.couponId\n      );\n      notify.success(\"you bought the coupon successfully\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return (\n    <form className=\"PurchaseCoupon Box\" onSubmit={handleSubmit(send)}>\n      <TextField\n        className=\"button\"\n        {...register(\"couponId\")}\n        label=\"Coupon ID\"\n        variant=\"filled\"\n        type=\"number\"\n        required\n        fullWidth\n      />\n\n      <ButtonGroup variant=\"text\" fullWidth>\n        <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\n          Send\n        </Button>\n        <Button type=\"reset\" color=\"secondary\" variant=\"outlined\">\n          clear\n        </Button>\n      </ButtonGroup>\n    </form>\n  );\n}\n\nexport default PurchaseCoupon;\n","import { InputLabel, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { UserType } from \"../../../Models/UserModel\";\r\nimport store from \"../../../Redux/Store\";\r\nimport notify from \"../../../Services/Notification\";\r\nimport darkTheme from \"../../SharedArea/CreateMuiTheme/CreateMuiTheme\";\r\nimport GetCustomerCoupons from \"../GetCustomerCoupons/GetCustomerCoupons\";\r\nimport GetCustomerCouponsByCategory from \"../GetCustomerCouponsByCategory/GetCustomerCouponsByCategory\";\r\nimport GetCustomerCouponsByMaxPrice from \"../GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice\";\r\nimport GetCustomerDetails from \"../GetCustomerDetails/GetCustomerDetails\";\r\nimport PurchaseCoupon from \"../PurchaseCoupon/PurchaseCoupon\";\r\n\r\ninterface CustomerMenuState {\r\n  methodToShow: string;\r\n}\r\n\r\ninterface CompanyMenuProps extends RouteComponentProps {}\r\n\r\nclass CustomerMenu extends Component<CompanyMenuProps, CustomerMenuState> {\r\n  public constructor(props: CompanyMenuProps) {\r\n    super(props);\r\n    this.state = {\r\n      methodToShow: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (store.getState().authState.user?.userType !== UserType.CUSTOMER) {\r\n      notify.error(\r\n        \"please log in as company in order to access the Company Menu\"\r\n      );\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <ThemeProvider theme={darkTheme}>\r\n        <div className=\"CustomerMenu\">\r\n          <Typography variant=\"h2\" align=\"center\">\r\n            Customer Area\r\n          </Typography>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Choose method from the menu below\r\n          </Typography>\r\n          <br />\r\n          <br />\r\n          <InputLabel>Methods List:</InputLabel>\r\n          <Select\r\n            variant=\"filled\"\r\n            fullWidth\r\n            onChange={(selectItem) => {\r\n              this.setState({ methodToShow: String(selectItem.target.value) });\r\n            }}\r\n            >\r\n            <InputLabel>Methods list</InputLabel>\r\n            <MenuItem value=\"PurchaseCoupon\">Purchase Coupon</MenuItem>\r\n            <MenuItem value=\"GetCustomerCoupons\">All your Coupons</MenuItem>\r\n            <MenuItem value=\"GetCustomerCouponsByCategory\">\r\n              Your Coupons by Category\r\n            </MenuItem>\r\n            <MenuItem value=\"GetCustomerCouponsByMaxPrice\">\r\n              Your Coupons by Max Price\r\n            </MenuItem>\r\n            <MenuItem value=\"GetCustomerDetails\">Your Details</MenuItem>\r\n          </Select>\r\n\r\n          <div className=\"methodToShow\">\r\n            {this.state.methodToShow === \"PurchaseCoupon\" && <PurchaseCoupon />}\r\n            {this.state.methodToShow === \"GetCustomerCoupons\" && (\r\n              <GetCustomerCoupons />\r\n            )}\r\n            {this.state.methodToShow === \"GetCustomerCouponsByCategory\" && (\r\n              <GetCustomerCouponsByCategory />\r\n            )}\r\n            {this.state.methodToShow === \"GetCustomerCouponsByMaxPrice\" && (\r\n              <GetCustomerCouponsByMaxPrice />\r\n            )}\r\n            {this.state.methodToShow === \"GetCustomerDetails\" && (\r\n              <div>\r\n                <GetCustomerDetails />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomerMenu;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { logoutAction } from \"../../../../Redux/AuthState\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport notify from \"../../../../Services/Notification\";\r\n\r\nfunction Logout(): JSX.Element {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        store.dispatch(logoutAction());\r\n        notify.success(\"You are now logged out.\");\r\n        history.push(\"/home\");\r\n    });\r\n\r\n    return null;\r\n}\r\n\r\nexport default Logout;\r\n","import \"./Page404.css\"\nimport { NavLink } from \"react-router-dom\";\n\nfunction Page404(): JSX.Element {\n  return (\n    <div className=\"Page404\">\n      <div>\n        The page you are looking for doesn't exist :( <br/> you can try returning\n        <NavLink to=\"/home\">Home</NavLink> instead.\n      </div>\n      <img\n        src=\"http://www.quickmeme.com/img/cb/cbc49c853e2e5b93734077b153d944cb491d6c277ada4a516153dbbe4446e208.jpg\"\n        title=\"Page not found\"\n        alt=\"A cool meme about page not found.\"\n      />\n    </div>\n  );\n}\n\nexport default Page404;\n","import \"./AboutMe.css\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction AboutMe(): JSX.Element {\n  return (\n    <div className=\"AboutMe\">\n      <p>\n        My name is Eitan Etzion and this site is a showcase for my capabilities.\n        The frontend uses React (TS) and the backend runs on Java. <br />\n      </p>\n      Backend git: &nbsp;\n      <a href=\"https://github.com/eitan-ez/CouponsWebsite\">here</a>\n      <br />\n      Frontend git: &nbsp;\n      <a href=\"https://github.com/eitan-ez/ReactProject\">here</a>\n      <br />\n      And contact me &nbsp;\n      <a href=\"https://www.linkedin.com/in/eitan-etzion-217b8a1b1/\">\n        in LinkedIn\n      </a>\n      <p>\n        How to use this site: <br />\n        Login as admin, the email is \"admin@admin.com\" and the password is\n        \"admin\".\n      </p>\n      <p>\n        After the login, you'll be redirected to the Admin Area, where you'll be\n        able to add customers and companies. add them and you'll be able to\n        login as one of them, add and delete coupons (as a company) or buy\n        coupons (as a customer). Enjoy!\n      </p>\n      <NavLink to=\"/home\">Link Home</NavLink>, cause you need one.\n    </div>\n  );\n}\n\nexport default AboutMe;\n","import {Redirect, Route, Switch} from \"react-router\";\r\nimport AdminMenu from \"../../AdminArea/AdminMenu/AdminMenu\";\r\nimport Main from \"../Home/Main\"\r\nimport CompanyMenu from \"../../CompanyArea/CompanyMenu/CompanyMenu\";\r\nimport CustomerMenu from \"../../CustomerArea/CustomerMenu/CustomerMenu\";\r\nimport Logout from \"../AuthArea/Logout/Logout\";\r\nimport Page404 from \"../../SharedArea/Page404/Page404\";\r\nimport AboutMe from \"../../AboutMeArea/AboutMe/AboutMe\";\r\n\r\nfunction Routing(): JSX.Element {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n\r\n                <Route path=\"/home\" component={Main} exact/>\r\n                <Route path=\"/admin\" component={AdminMenu} exact/>\r\n                <Route path=\"/company\" component={CompanyMenu} exact/>\r\n                <Route path=\"/customer\" component={CustomerMenu} exact/>\r\n                <Route path=\"/about\" component={AboutMe} exact/>\r\n\r\n                <Route path=\"/logout\" component={Logout} exact />\r\n\r\n\r\n                <Redirect from=\"/\" to=\"/home\" exact/>\r\n\r\n                <Route component={Page404} />\r\n\r\n\r\n            </Switch>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routing;\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"../Footer/Footer\";\nimport Header from \"../Header/Header\";\nimport Routing from \"../Routing/Routing\";\nimport \"./Layout.css\";\n\nfunction Layout(): JSX.Element {\n  return (\n    <BrowserRouter>\n      <div className=\"Layout\">\n        <header>\n          <Header />\n        </header>\n\n        <main>\n          <Routing />\n        </main>\n\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from './Components/LayoutArea/Layout/Layout';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}